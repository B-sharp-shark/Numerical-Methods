import math
# METHOD: AITKEN'S DELTA SQUARE (using data points from bisection method)


H1 = 24831 #J/mol
H2 = -5118 #J/mol
m0 = 0.06156  #kg/kg
R = 8.314  #J/mol/K
T = (52.6 + 273.15) #k
C0 = 0.001645
K0 = 5.710
Xe = 0.133 #kg/kg
a = 1

##best answer 0.6480666248504123
C = C0*math.exp(H1/(R*T))
K = K0*math.exp(H2/(R*T))

#using 70 data points from bisection method
a = [0.5,
0.75,
0.625,
0.6875,
0.65625,
0.640625,
0.6484375,
0.64453125,
0.646484375,
0.6474609375,
0.64794921875,
0.648193359375,
0.6480712890625,
0.64801025390625,
0.648040771484375,
0.6480560302734375,
0.6480636596679688,
0.6480674743652344,
0.6480655670166016,
0.648066520690918,
0.6480669975280762,
0.6480667591094971,
0.6480666399002075,
0.6480665802955627,
0.6480666100978851,
0.6480666249990463,
0.6480666175484657,
0.648066621273756,
0.6480666231364012,
0.6480666240677238,
0.648066624533385,
0.6480666247662157,
0.648066624882631,
0.6480666248244233,
0.6480666248535272,
0.6480666248389753,
0.6480666248462512,
0.6480666248498892,
0.6480666248517082,
0.6480666248507987,
0.6480666248503439,
0.6480666248505713,
0.6480666248504576,
0.6480666248504008,
0.6480666248504292,
0.648066624850415,
0.6480666248504079,
0.6480666248504114,
0.6480666248504132,
0.6480666248504123,
0.6480666248504128,
0.6480666248504126,
0.6480666248504124]



n= 0
#Forward difference
while(n<=len(a)-3):

    x_n = a[n]
    x_n_1 = a[n+1]
    x_n_2 = a[n+2]
    num = math.pow( x_n_1 -  x_n,  2)
    denum = x_n_2 - 2*x_n_1 + x_n
    if denum == 0:
        print("Can't be accelerated: Division by zero not possible")
        n =  n+1
        continue
    print("a=",x_n, ", accelerated to: ",x_n - (num/denum),sep='')
    n =  n+1
    
input()
